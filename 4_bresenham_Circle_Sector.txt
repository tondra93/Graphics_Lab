void bresenham_Circle_Sector(float h, float k, float bashardh){
    float xc = h, yc = k;
    int r = round(bashardh);
    int x = 0, y = r;
    int d = 1 - r;

    float start_angle = 30 * M_PI / 180.0;
    float end_angle = 60 * M_PI / 180.0;

    glBegin(GL_POINTS);
    while (x <= y){
        float points[8][2] = {
            {xc + x, yc + y},
            {xc - x, yc + y},
            {xc + x, yc - y},
            {xc - x, yc - y},
            {xc + y, yc + x},
            {xc - y, yc + x},
            {xc + y, yc - x},
            {xc - y, yc - x}
        };

        for (int i = 0; i < 8; i++){
            float dx = points[i][0] - xc;
            float dy = points[i][1] - yc;
            float angle = atan2(dy, dx);

            if (angle < 0) angle += 2 * M_PI;

            if (angle >= start_angle && angle <= end_angle){
                glVertex2f(points[i][0], points[i][1]);
            }
        }

        if (d < 0){
            d = d + 2 * x + 3;
        }else{
            d = d + 2 * (x - y) + 5;
            y--;
        }
        x++;
    }
    glEnd();
}
